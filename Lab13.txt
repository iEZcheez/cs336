What benefit did using the React Router bring to the application?
The application does not have to load its entire page to do a certain task. 
The edit feature changes the React components and can still safely modify the database.

Which is better, hash history or browser history?
Hash history works if you do not specify to base URLs and files.
Browser history requires "the cost of the additional server config and needing to hard-code or configure your base URL for different servers via basename."

Why does the server (either Webpack Dev Server or the Express server) have to be modified to support the browser history? Compare this with the hash-based server demonstrated in class, which didn't require such modifications.
We set the paths to the React components by setting them in the Render() refactoring.

What state does the new CommentEdit component maintain and how does that compare with the state maintained by the CommentBox component?
It maintains the Author and the Text state and it is reflected on to the CommentBox component.

What does the CommentEdit component do when the AJAX PUT or DELETE methods return successfully? How does this compare with what the “Cancel” button provided by the CommentEdit component does?
the PUT and DELETE methods are handled through onClick buttons while the Cancel button is a Link that returns the page to the "/" page or React components setup.

How is the Link added in the last step different from a simple HTML hyperlink?
The link has an appending variable that allows the Edit button to find the Route link by passing the this.props.id parameter to find the correct comment to edit.
